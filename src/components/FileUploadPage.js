import React, { useState } from 'react';
import Button from '@mui/material/Button';
import Snackbar from '@mui/material/Snackbar';
import MuiAlert from '@mui/material/Alert';
import LoadingButton from '@mui/lab/LoadingButton';

const Alert = React.forwardRef(function Alert(props, ref) {
  return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
});

function FileUploadPage() {
  const [selectedFile, setSelectedFile] = useState();
  const [isSelected, setIsSelected] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [open, setOpen] = useState(false);

  const changeHandler = (event) => {
    // if (isSelected) {
    //   setSelectedFile(null);
    //   setIsSelected(false);
    //   return;
    // }
    const ext = event.target.files[0].name.split('.').pop();
    if (ext === 'apk') {
      setSelectedFile(event.target.files[0]);
      setIsSelected(true);
    } else {
      setOpen(true);
    }
  };

  const handleSubmission = () => {
    setIsLoading(true);
    const formData = new FormData();

    formData.append('File', selectedFile);
    // fetch('https://freeimage.host/api/1/upload?key=<YOUR_API_KEY>', {
    //   method: 'POST',
    //   body: formData,
    // })
    //   .then((response) => response.json())
    //   .then((result) => {
    //     console.log('Success:', result);
    //   })
    //   .catch((error) => {
    //     console.error('Error:', error);
    //   });
    console.log('Predict!');
  };
  const handleClose = (event, reason) => {
    if (reason === 'clickaway') {
      return;
    }

    setOpen(false);
  };

  return (
    <>
      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>
        <Alert onClose={handleClose} severity="error" sx={{ width: '100%' }}>
          Unable to upload any file other than .apk
        </Alert>
      </Snackbar>
      <div
        style={{
          padding: '5px',
          display: 'flex',
          flexDirection: 'column',
          justifyContent: 'center',
          alignItems: 'center',
        }}
      >
        <Button
          variant="contained"
          component="label"
          sx={{ width: '20%' }}
          //   onClick={() => {
          //     if (isSelected) changeHandler();
          //   }}
        >
          {isSelected ? 'UPLOAD NEW' : 'UPLOAD'}
          <input
            hidden
            // disabled={isSelected}
            type="file"
            name="file"
            accept="*.apk"
            onChange={changeHandler}
          />
        </Button>
        {isSelected ? (
          <div
            style={{
              alignSelf: 'flex-start',
              display: 'flex',
              flexDirection: 'column',
              justifyContent: 'center',
              alignItems: 'flex-start',
              marginLeft: '15px',
            }}
          >
            <p>
              <b>Filename</b>: {selectedFile.name}
            </p>
            <p>
              <b>Filetype</b>: {selectedFile.type}
            </p>
            <p>
              <b>Size in bytes</b>: {selectedFile.size}
            </p>
            <p>
              <b>lastModifiedDate</b>:{' '}
              {selectedFile.lastModifiedDate.toLocaleDateString()}
            </p>
          </div>
        ) : (
          <p>Select a file to show details</p>
        )}
        {/* <div> */}
        <LoadingButton
          loading={isLoading}
          loadingPosition="start"
          disabled={!isSelected}
          variant="contained"
          component="label"
          onClick={handleSubmission}
          sx={{ width: '20%' }}
        >
          Predict
        </LoadingButton>
        {/* </div> */}
      </div>
    </>
  );
}

export default FileUploadPage;
